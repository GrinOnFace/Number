//* Числа

//TODO: Способы записи чисел 

let billion = 1000000000;
let billion = 1_000_000_000

let billion = 1e9;  // 1 миллиард, буквально: 1 и 9 нулей
alert( 7.3e9 );  // 7.3 миллиарда (7,300,000,000)

//Другими словами, "e" умножает число на 1 с указанным количеством нулей.

1e3 === 1 * 1000 // e3 означает *1000
1.23e6 === 1.23 * 1000000 // e6 означает *1000000

//И наоборот

let ms = 1e-6; // шесть нулей слева от 1

//TODO: toString(base)

//Метод num.toString(base) возвращает строковое представление числа num в системе счисления base.

let num = 255;
alert( num.toString(16) );  // ff
alert( num.toString(2) );   // 11111111

//TODO: Округление 

//Math.floor
//Округление в меньшую сторону: 3.1 становится 3, а -1.1 — -2.

//Math.ceil
//Округление в большую сторону: 3.1 становится 4, а -1.1 — -1.

//Math.round
//Округление до ближайшего целого: 3.1 становится 3, 3.6 — 4, а -1.1 — -1.

//TODO: toFixed

//Метод toFixed(n) округляет число до n знаков после запятой и возвращает строковое представление результата.

//! alert( 0.1 + 0.2 ); // 0.30000000000000004 

//*Можно так 
//let sum = 0.1 + 0.2;
//alert( sum.toFixed(2) ); // 0.30

//TODO: Другие проверки

//isNaN(value) преобразует значение в число и проверяет является ли оно NaN:

alert( isNaN(NaN) ); // true
alert( isNaN("str") ); // true

//isFinite(value) преобразует аргумент в число и возвращает true, если оно является обычным числом, т.е. не NaN/Infinity/-Infinity:

alert( isFinite("15") ); // true
alert( isFinite("str") ); // false, потому что специальное значение: NaN
alert( isFinite(Infinity) ); // false, потому что специальное значение: Infinity

//TODO: parseInt и parseFloat

alert( parseInt('100px') ); // 100
alert( parseFloat('12.5em') ); // 12.5
alert( parseInt('12.3') ); // 12, вернётся только целая часть
alert( parseFloat('12.3.4') ); // 12.3, произойдёт остановка чтения на второй точке
alert( parseInt('a123') ); // NaN, на первом символе происходит остановка чтения

alert( parseInt('0xff', 16) ); // 255
alert( parseInt('ff', 16) ); // 255, без 0x тоже работает
alert( parseInt('2n9c', 36) ); // 123456

//TODO: Другие мат функции

/*Math.random()
Возвращает псевдослучайное число в диапазоне от 0 (включительно) до 1 (но не включая 1)*/

alert( Math.random() ); // 0.1234567894322
alert( Math.random() ); // 0.5435252343232
alert( Math.random() ); // ... (любое количество псевдослучайных чисел)

/*Math.max(a, b, c...) / Math.min(a, b, c...)
Возвращает наибольшее/наименьшее число из перечисленных аргументов. */

alert( Math.max(3, 5, -10, 0, 1) ); // 5
alert( Math.min(1, 2) ); // 1

/*Math.pow(n, power)
Возвращает число n, возведённое в степень power */

alert( Math.pow(2, 10) ); // 2 в степени 10 = 1024
